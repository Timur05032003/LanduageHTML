package LanguageHTML.textGen;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.text.rt.TextGenContext;
import jetbrains.mps.text.impl.TextGenSupport;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import org.jetbrains.mps.openapi.language.SContainmentLink;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SConcept;
import org.jetbrains.mps.openapi.language.SProperty;

public abstract class ElementCreator {
  public static void byElement(SNode node, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    tgs.append(ElementCreator.createHtml(SLinkOperations.getTarget(node, LINKS.root$pJQk), ctx));
  }
  protected static String createHtml(SNode node, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    StringBuilder resultString = new StringBuilder();

    if (SNodeOperations.isInstanceOf(node, CONCEPTS.HtmlDocument$1h)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<html>\n", "</html>", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.Head$iT)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<head>\n", "</head>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.Body$mf)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<body>\n", "</body>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.DivElement$9$)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<div>\n", "</div>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.SpanElement$D6)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<span>", "</span>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.ParagraphElement$_9)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<p>\n", "</p>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.TitleElement$wb)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<title>", "</title>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.AnchorElement$tJ)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<a href=" + SPropertyOperations.getString(SNodeOperations.cast(node, CONCEPTS.AnchorElement$tJ), PROPS.href$TqGt) + ">\n", "</a>\n", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.StrongElement$Pn)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<strong>", "</strong>", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.ItalicTag$hK)) {
      resultString.append(ElementCreator.createHtmlBlock(node, "<i>", "</i>", ctx));
    } else if (SNodeOperations.isInstanceOf(node, CONCEPTS.TextElement$H$)) {
      resultString.append(SPropertyOperations.getString(SNodeOperations.cast(node, CONCEPTS.TextElement$H$), PROPS.text$7iLc)).append("\n");
    }

    return resultString.toString();
  }
  protected static StringBuilder createHtmlBlock(SNode node, String openTag, String closeTag, final TextGenContext ctx) {
    final TextGenSupport tgs = new TextGenSupport(ctx);
    StringBuilder result = new StringBuilder();
    result.append(openTag);
    for (SNode itNode : ListSequence.fromList(SNodeOperations.getChildren(node))) {
      result.append(ElementCreator.createHtml(itNode, ctx));
    }
    result.append(closeTag);
    return result;
  }

  private static final class LINKS {
    /*package*/ static final SContainmentLink root$pJQk = MetaAdapterFactory.getContainmentLink(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a86cc2fL, 0x2263eb887a86d93dL, "root");
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept HtmlDocument$1h = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a867ce3L, "LanguageHTML.structure.HtmlDocument");
    /*package*/ static final SConcept Head$iT = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x7a7699b586cba882L, "LanguageHTML.structure.Head");
    /*package*/ static final SConcept Body$mf = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x7a7699b586cbaa23L, "LanguageHTML.structure.Body");
    /*package*/ static final SConcept DivElement$9$ = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a871eeeL, "LanguageHTML.structure.DivElement");
    /*package*/ static final SConcept SpanElement$D6 = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a87248dL, "LanguageHTML.structure.SpanElement");
    /*package*/ static final SConcept ParagraphElement$_9 = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a872889L, "LanguageHTML.structure.ParagraphElement");
    /*package*/ static final SConcept TitleElement$wb = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a870e67L, "LanguageHTML.structure.TitleElement");
    /*package*/ static final SConcept AnchorElement$tJ = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a872acaL, "LanguageHTML.structure.AnchorElement");
    /*package*/ static final SConcept StrongElement$Pn = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x194f0d7ef328cb64L, "LanguageHTML.structure.StrongElement");
    /*package*/ static final SConcept ItalicTag$hK = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x194f0d7ef32b4674L, "LanguageHTML.structure.ItalicTag");
    /*package*/ static final SConcept TextElement$H$ = MetaAdapterFactory.getConcept(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a86a58bL, "LanguageHTML.structure.TextElement");
  }

  private static final class PROPS {
    /*package*/ static final SProperty href$TqGt = MetaAdapterFactory.getProperty(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a872acaL, 0x2263eb887a872c52L, "href");
    /*package*/ static final SProperty text$7iLc = MetaAdapterFactory.getProperty(0xcfdb8e6e45b145d3L, 0xa650bdfedc3caeb8L, 0x2263eb887a86a58bL, 0x2263eb887a86a84cL, "text");
  }
}
